{
    "Description": "Create FireCARES Webserver Load Balancer and Auto-Scaling group",
    "Outputs": {
        "AMI": {
            "Description": "Web server ami image group.",
            "Value": {
                "Ref": "baseAmi"
            }
        },
        "WebServerSecurityGroup": {
            "Description": "Web server security group.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "WebServers",
                                "GroupId"
                            ]
                        }
                    ]
                ]
            }
        },
        "stackURL": {
            "Description": "Stack url",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "FireCARESLoadBalancer",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "Environment": {
            "Default": "dev",
            "Description": "Stack environment (e.g. prod, dev, int)",
            "MaxLength": "12",
            "MinLength": "1",
            "Type": "String"
        },
        "KeyName": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "WebInstanceClass": {
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "t2.small",
            "Description": "WebServer EC2 instance type",
            "Type": "String"
        },
        "WebServerCapacity": {
            "ConstraintDescription": "must be between 1 and 5 EC2 instances.",
            "Default": "1",
            "Description": "The initial number of WebServer instances",
            "MaxValue": "5",
            "MinValue": "1",
            "Type": "Number"
        },
        "baseAmi": {
            "ConstraintDescription": "Must be the name of an existing AMI.",
            "Default": "ami-e8b048fe",
            "Description": "Name of the AMI to use",
            "Type": "String"
        }
    },
    "Resources": {
        "FireCARESLoadBalancer": {
            "Properties": {
                "AvailabilityZones": {
                    "Fn::GetAZs": ""
                },
                "CrossZone": "true",
                "LBCookieStickinessPolicy": [
                    {
                        "CookieExpirationPeriod": "30",
                        "PolicyName": "CookieBasedPolicy"
                    }
                ],
                "Listeners": [
                    {
                        "InstancePort": "80",
                        "LoadBalancerPort": "80",
                        "PolicyNames": [
                            "CookieBasedPolicy"
                        ],
                        "Protocol": "HTTP"
                    },
                    {
                        "InstancePort": "80",
                        "LoadBalancerPort": "443",
                        "Protocol": "HTTPS",
                        "SSLCertificateId": "arn:aws:iam::164077527722:server-certificate/firecares"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
        },
        "WebServerLaunchConfiguration": {
            "Properties": {
                "ImageId": {
                    "Ref": "baseAmi"
                },
                "InstanceType": {
                    "Ref": "WebInstanceClass"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServers"
                    }
                ]
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "WebServers": {
            "Properties": {
                "GroupDescription": "FireCARES webserver group",
                "SecurityGroupIngress": [
                    {
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupName": {
                            "Fn::GetAtt": [
                                "FireCARESLoadBalancer",
                                "SourceSecurityGroup.GroupName"
                            ]
                        },
                        "SourceSecurityGroupOwnerId": {
                            "Fn::GetAtt": [
                                "FireCARESLoadBalancer",
                                "SourceSecurityGroup.OwnerAlias"
                            ]
                        },
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "54.173.150.226/32",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "69.255.184.149/32",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "65.254.97.100/32",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "108.66.75.162/32",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "WebserverAutoScale": {
            "Properties": {
                "AvailabilityZones": [
                    "us-east-1b",
                    "us-east-1c"
                ],
                "DesiredCapacity": {
                    "Ref": "WebServerCapacity"
                },
                "HealthCheckType": "EC2",
                "LaunchConfigurationName": {
                    "Ref": "WebServerLaunchConfiguration"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "FireCARESLoadBalancer"
                    }
                ],
                "MaxSize": "5",
                "MinSize": "1",
                "Tags": [
                    {
                        "Key": "environment",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Ref": "Environment"
                        }
                    },
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    "web-server",
                                    {
                                        "Ref": "Environment"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        }
    }
}
