---

- name: Install packages required by the Django app inside virtualenv
  pip: virtualenv={{ virtualenv_path }} requirements={{ requirements_file }}

- name: write local settings
  template: src=local_settings.py.j2 dest={{virtualenv_path}}/firecares/firecares/settings/local_settings.py owner={{gunicorn_user}} group={{gunicorn_user}} mode=0740


- name: Run the Django syncdb command
  django_manage:
    command: syncdb
    app_path: "{{ project_path }}"
    virtualenv: "{{ virtualenv_path }}"
    settings: "{{ django_settings_file }}"
  environment: django_environment
  when: run_django_syncdb is defined and run_django_sync_db
  tags: django.syncdb

- name: Run Django database migrations
  django_manage:
    command: migrate
    app_path: "{{ project_path }}"
    virtualenv: "{{ virtualenv_path }}"
    settings: "{{ django_settings_file }}"
  environment: django_environment
  when: run_django_db_migrations is defined and run_django_db_migrations
  tags: django.migrate

- name: Run Django collectstatic
  django_manage:
    command: collectstatic
    app_path: "{{ project_path }}"
    virtualenv: "{{ virtualenv_path }}"
    settings: "{{ django_settings_file }}"
  environment: django_environment
  when: run_django_collectstatic is defined and run_django_collectstatic
  tags: django.collectstatic

- name: download fixtures
  get_url: url=https://s3.amazonaws.com/firecares-share/fixtures/firecares_fixtures.sql.gz dest=/tmp/firecares_fixtures.sql.gz timeout=30
  register: download_fixtures
  when: db_created is defined and db_created.changed

- stat: path=/tmp/firecares_fixtures.sql.gz
  register: p

- name: extract fixtures
  command: gunzip firecares_fixtures.sql.gz chdir=/tmp
  when: p.stat.exists is defined and p.stat.exists

- stat: path=/tmp/firecares_fixtures.sql
  register: fixtures_sql

- name: load fixtures
  command: psql -d {{ db_name }} -f /tmp/firecares_fixtures.sql chdir=/tmp
  when: fixtures_sql.stat.exists is defined and fixtures_sql.stat.exists
  sudo_user: postgres

- name: remove fixtures
  file: path=/tmp/firecares_fixtures.sql.gz state=absent
  when: p.stat.exists is defined and p.stat.exists

- name: remove fixtures
  file: path=/tmp/firecares_fixtures.sql state=absent
  when: fixtures_sql.stat.exists is defined and fixtures_sql.stat.exists

- name: create users
  django_manage:
    command: "add_user --username {{item.key}} --password {{ item.value.password }} --email {{ item.value.email }} --is_staff {{ item.value.is_staff|default(False) }} --is_superuser {{ item.value.is_superuser|default(False) }} --is_active {{ item.value.is_active|default(True) }}"
    app_path: "{{ project_path }}"
    virtualenv: "{{ virtualenv_path }}"
    settings: "{{ django_settings_file }}"
  environment: django_environment
  when: firecares_users is defined and add_firecares_users
  with_dict: "{{ firecares_users|default({}) }}"
  tags: django.add_user

